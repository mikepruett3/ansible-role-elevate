---
# tasks file for ansible-role-elevate

- name: "Import Distribution Prerequisites"
  include_tasks: "{{ ansible_facts['distribution'] }}.yaml"

- name: "Get the major version of the running kernel"
  shell: uname -r | cut -d. -f1
  register: kernel

- name: "Set fact about existing Distribution"
  set_fact:
    existing_version: "{{ ansible_distribution_major_version }}"
    existing_kernel_major_version: "{{ kernel.stdout }}"

- name: "Upgrade the system (yum)"
  yum:
    name: '*'
    state: latest
  register: upgrade
  when:
    - ansible_facts['pkg_mgr'] == 'yum'

- name: "Reboot if packages were upgraded (yum)"
  reboot:
  when:
    - upgrade.changed

- name: "Upgrade the system (dnf)"
  dnf:
    name: '*'
    state: latest
  register: upgrade
  when:
    - ansible_facts['pkg_mgr'] == 'dnf'

- name: "Reboot if packages were upgraded (dnf)"
  reboot:
  when:
    - upgrade.changed

- name: "Install the ELevate release package"
  yum:
    name: "http://repo.almalinux.org/elevate/elevate-release-latest-el{{ ansible_distribution_major_version }}.noarch.rpm"
    state: present

- name: "Install the leapp packages"
  yum:
    name: "{{ leapp_packages }}"
    state: present

- name: "Import Distribution Fixes"
  include_tasks: "{{ ansible_facts['distribution'] }}-Fixes.yaml"

- name: "Run a Pre-Upgrade check"
  shell: leapp preupgrade
  register: preupgrade
  failed_when: '"END OF REPORT" not in preupgrade.stdout'

- name: "Build fix command list based on Pre-Upgrade recommendations"
  shell: cat /var/log/leapp/leapp-report.txt | grep -F [command] | awk '{$1= ""; print $0}'
  register: fix_commands

- name: "Run gathered Pre-Upgrade fixes"
  shell: "{{ item }}"
  loop: "{{ fix_commands.stdout_lines }}"

- name: "Perform the upgrade"
  shell: leapp upgrade
  register: upgrade

- name: "Reboot after the upgrade"
  reboot:
    reboot_timeout: 3600
  when:
    - upgrade.changed

- name: set new python interpreter
  set_fact:
    ansible_python_interpreter: /usr/bin/python3

- name: "Remove exclusion from yum configuration file"
  shell: sed -i '/^exclude=/Id' /etc/yum.conf

- name: "Remove Legacy packages after upgrade"
  dnf:
    name: "*el{{ existing_version }}*"
    state: latest
  register: upgrade

- name: "Remove bootloader entries for Legacy kernels"
  shell: find /boot/loader/entries/ -type f -name "*-{{ existing_kernel_major_version }}.*" -delete
