---
# After upgrade tasks file for ansible-role-elevate

- name: "Revert changes to root logins in SSH daemon config"
  lineinfile:
    path: /etc/ssh/sshd_config
    line: 'PermitRootLogin yes'
    state: absent
  when:
    - permit_root_login is defined
    - not permit_root_login
    #- ansible_facts['distribution'] == 'CentOS'
    #- ansible_distribution_major_version == '7'

- name: "Revert changes AllowZoneDrifting in firewalld config"
  replace:
    path: /etc/firewalld/firewalld.conf
    regexp: '^AllowZoneDrifting=no\b'
    replace: 'AllowZoneDrifting=yes'
  when:
    - allow_zone_drifting is defined
    - allow_zone_drifting
    #- allow_zone_drifting is true

- name: "Remove 'let skip_defaults_vim=1' from /etc/virc"
  lineinfile:
    path: /etc/virc
    line: "let skip_defaults_vim=1"
    state: absent
    backrefs: no
  when:
    - ansible_distribution_major_version == '8'

- name: "Remove sslverify in {{ config_file }}"
  lineinfile:
    path: "{{ config_file }}"
    line: 'sslverify=0'
    state: absent
  when:
    - sslverify_value is defined
    - sslverify_raw == "not_set"

- name: "Re-Enable sslverify if setting was present in {{ config_file }}"
  lineinfile:
    path: "{{ config_file }}"
    regexp: '^sslverify='
    line: 'sslverify=1'
    state: present
    backrefs: yes
  when:
    - sslverify_value is defined
    - sslverify_value

#- name: "Check current python alternative"
#  command: alternatives --display python
#  register: python_alternatives
#  failed_when: false
#  changed_when: false
#  when:
#    - ansible_distribution_major_version == '7'

#- name: Determine if python alternative is set to /usr/libexec/no-python
#  set_fact:
#    python_is_bad: true
#  when:
#    - ansible_distribution_major_version == '7'
#    - '"link currently points to /usr/libexec/no-python" in python_alternatives.stdout'

#- name: "Check if python3 binary exists"
#  stat:
#    path: "{{ ansible_python_interpreter }}"
#  register: python3
#  when:
#    - ansible_distribution_major_version == '7'
#    - python_is_bad exists
#    - python_is_bad | bool

#- name: "Update python alternative to use /usr/bin/python3"
#  alternatives:
#    name: python
#    path: "{{ ansible_python_interpreter }}"
#  when:
#    - ansible_distribution_major_version == '7'
#    - python_is_bad exists
#    - python_is_bad | bool
#    - python3.stat.exists
#    - python3.stat.executable
